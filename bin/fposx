#!/bin/bash -x

set -eu

: ${FPOSX_CONF:=~/.config/fpos/fposx}
if [ -f $FPOSX_CONF ]
then
	. $FPOSX_CONF
fi

fposx_set() {
	echo $1=y >> $FPOSX_CONF
	. $FPOSX_CONF
}

if ! brew --version > /dev/null
then
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	fposx_set fposx_manage_brew
fi

if ! python3 --version > /dev/null
then
	# Work around a failure of pip3 to find the HTTPSHandler in OpenSSL:
	# https://stackoverflow.com/questions/20688034/importerror-cannot-import-name-httpshandler-using-pip
	brew install openssl
	brew link openssl --force
	fposx_set fposx_manage_openssl

	brew install python3
	fposx_set fposx_manage_python3

	pip3 install --upgrade pip setuptools
	brew unlink openssl
fi

if ! virtualenv --version > /dev/null
then
	pip3 install virtualenv
	fposx_set fposx_manage_virtualenv
fi

if ! git --version > /dev/null
then
	brew install git
	fposx_set fposx_manage_git
fi

if ! clang-omp --version > /dev/null
then
	brew install clang-omp
	fposx_set fposx_manage_clang_omp
fi

if test ! -e fpos -a ! -e bin/fpos ||
	! git status > /dev/null &&
	! GIT_WORK_TREE=fpos GIT_DIR=fpos/.git git status > /dev/null
then
	git clone https://github.com/amboar/fpos.git
	fposx_set fposx_manage_fpos
fi

fpos() {
	$PYTHON $PYTHONHOME/bin/fpos $@
}

export -f fpos

DEST=""
case $( basename $PWD ) in
	bin) DEST=".." ;;
	fpos) DEST="." ;;
	*) DEST="fpos" ;;
esac

cd $DEST

set +eu
case $1 in
	install)
		CC=clang-omp
		export CC
		make ve
		. ve/bin/activate
		make pip
		make install
		deactivate
		;;
	run)
		. ve/bin/activate
		PYTHONHOME=ve
		PYTHON=/usr/local/bin/python3
		export PYTHONHOME
		export PYTHON
		$SHELL
		deactivate
		;;
	upgrade)
		[ -n ${fposx_manage_brew+y} ] &&
			brew update &&
			brew doctor
		[ -n ${fposx_manage_openssl+y} ] &&
			brew upgrade openssl
		if [ -n ${fposx_manage_python+y} ]
		then
			brew upgrade python3
			pip3 install --upgrade pip
		fi
		[ -n ${fposx_manage_virtualenv+y} ] &&
			pip3 install --upgrade virtualenv
		[ -n ${fposx_manage_git+y} ] &&
			brew upgrade git
		[ -n ${fposx_manage_clang_omp+y} ] &&
			brew upgrade clang-omp
		[ -n ${fposx_manage_fpos+y} ] &&
			git fetch origin &&
			git checkout origin/master
		exec $0 install
		;;
	*)
		echo \'$1\' unknown: Run with \'install\', \'run\' or \'upgrade\'
		exit 1
		;;
esac
